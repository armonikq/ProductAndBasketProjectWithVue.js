{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.city) + \" Hava durumu\", 1 /* TEXT */), _ctx.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Yükleniyorr\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.weather), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(_ctx.temperature) + \"°C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Rüzgar: \" + _toDisplayString(_ctx.wind) + \" km/s\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Nem: \" + _toDisplayString(_ctx.humidity) + \"%\", 1 /* TEXT */)]))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_toDisplayString","_ctx","city","loading","_hoisted_1","_hoisted_2","weather","temperature","wind","humidity"],"sources":["/Users/furkan/vue-deneme/src/App.vue"],"sourcesContent":["<template>\n <div >\n    <h1>{{city}} Hava durumu</h1>\n   <div  v-if=\"loading\">Yükleniyorr</div>\n   <div v-else>\n     <p>{{ weather }}</p>\n     <p>{{ temperature }}°C</p>\n     <p>Rüzgar: {{ wind }} km/s</p>\n     <p>Nem: {{ humidity }}%</p>\n   </div>\n </div>\n\n\n\n</template>\n\n<script>\nnew Vue({\n  el: '#app',\n  data: {\n    city: 'İstanbul',\n    loading: true,\n    weather: '',\n    temperature: '',\n    wind: '',\n    humidity: ''\n  },\n  created() {\n    this.getWeatherData();\n  },\n  methods: {\n    getWeatherData() {\n      const apiKey = 'YOUR_API_KEY'; // OpenWeatherMap API key\n      const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${this.city}&appid=${apiKey}&units=metric`;\n\n      fetch(apiUrl)\n          .then(response => response.json())\n          .then(data => {\n            this.loading = false;\n            this.weather = data.weather[0].description;\n            this.temperature = data.main.temp;\n            this.wind = data.wind.speed;\n            this.humidity = data.main.humidity;\n          })\n          .catch(error => {\n            console.error('Hava durumu verileri alınırken bir hata oluştu:', error);\n            this.loading = false;\n          });\n    }\n  }\n});\n\n\n</script>\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACCC,mBAAA,CASM,cARHC,mBAAA,CAA6B,YAAAC,gBAAA,CAAvBC,IAAA,CAAAC,IAAI,IAAE,cAAY,iBACbD,IAAA,CAAAE,OAAO,I,cAAnBL,mBAAA,CAAsC,OAHzCM,UAAA,EAGwB,aAAW,M,cAChCN,mBAAA,CAKM,OATTO,UAAA,GAKKN,mBAAA,CAAoB,WAAAC,gBAAA,CAAdC,IAAA,CAAAK,OAAO,kBACbP,mBAAA,CAA0B,WAAAC,gBAAA,CAApBC,IAAA,CAAAM,WAAW,IAAG,IAAE,iBACtBR,mBAAA,CAA8B,WAA3B,UAAQ,GAAAC,gBAAA,CAAGC,IAAA,CAAAO,IAAI,IAAG,OAAK,iBAC1BT,mBAAA,CAA2B,WAAxB,OAAK,GAAAC,gBAAA,CAAGC,IAAA,CAAAQ,QAAQ,IAAG,GAAC,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}